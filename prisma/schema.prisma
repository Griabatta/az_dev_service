// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id                 Int        @id @default(autoincrement())
 
  clientId           String     @unique 
  apiKey             String     @unique
  clientPerforId     String?    @unique
  clientSecret       String?    @unique
  mpStatToken        String?
  name               String?
  email              String?     @unique
  tgId               String?    @unique
  tableSheetId       String     @unique
 
  createAt           DateTime   @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt           DateTime   @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))
 
  analytics          Analytics[]
  stock_warehouse    Stock_Warehouse[]
  transactions       Transaction_List[]
  product            Product_List[]
  performanceTokenId Int?              @unique
  performanceToken   PerformanceToken? 

  campaintTemplates  CampaignTemplate[]
  reports            Reports[]
  bundle             Bundle[]       
  camaignItem        CampaignItem[]    
}

model CampaignTemplate {
  id                Int     @id @default(autoincrement())
  campaignId        String  @unique
  status            String
  cpmType           String?
  advObjectType     String?
  title             String?
  fromDate          String?
  toDate            String?
  dailyBudget       String?
  budget            String?                                       
  
  user              User       @relation(fields: [userId], references: [id])
  userId            Int
  
  createdAt         DateTime @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updatedAt         DateTime  @updatedAt() @default(dbgenerated("(CURRENT_DATE)::timestamp"))   
}


model Analytics {
  id                  Int   @id @default(autoincrement())

  dimensionsId        Int?
  dimensionsName      String?
  revenue             Int?
  ordered_units       Int?    
  hits_view_search    Int?    
  hits_view_pdp       Int?    
  hits_view           Int?
  hits_tocart_search  Int?            
  hits_tocart_pdp     Int?        
  hits_tocart         Int?    
  session_view_search Int?              
  session_view_pdp    Int?          
  session_view        Int?      
  conv_tocart_search  Int?            
  conv_tocart_pdp     Int?          
  conv_tocart         Int?      
  returns             Int?  
  cancellations       Int?        
  delivered_units     Int?        
  position_category   Int?       

  userId              Int
  user                User   @relation(fields: [userId], references: [id])
  
  createAt            DateTime   @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt            DateTime   @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))   
}

model Stock_Warehouse {
  id                  Int     @id @default(autoincrement()) 
  
  sku	                Int
  warehouse_name      String
  item_code	          String
  item_name	          String
  free_to_sell_amount	Int
  promised_amount	    Int
  reserved_amount	    Int
  idc                 Float?
  
  userId              Int
  user                User      @relation(fields: [userId], references: [id])
  
  createAt            DateTime   @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt            DateTime   @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}
 


model Transaction_List {
  id                      Int     @id @default(autoincrement()) 

  operation_id            String
  operation_type          String
  operation_date          String
  operation_type_name     String
  delivery_charge         Int
  return_delivery_charge  Int
  accruals_for_sale       Int
  sale_commission         Int
  amount                  Float
  type                    String?
  delivery_schema         String?
  order_date              String?
  posting_number          String?
  warehouse_id            String?
  items                   String?
  services                String?

  userId                  Int
  user                    User      @relation(fields: [userId], references: [id])
  
  createAt                DateTime   @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt                DateTime   @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}


model Product_List {
  id                  Int     @id @default(autoincrement()) 
  
  userId              Int
  user                User      @relation(fields: [userId], references: [id])
  //
  archived            Boolean
  has_fbo_stocks      Boolean
  has_fbs_stocks      Boolean
  is_discounted       Boolean
  offer_id            String
  product_id          String
  // quants
  quants              String?

  createAt            DateTime   @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt            DateTime   @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}


model JournalErrors {
  id               Int       @id @default(autoincrement())
  
  errorUserId      Int
  errorCode        String?
  errorMassage     String
  errorPriority    Int
  errorServiceName String
  priorityDesign   String  @default("{0: low priority, 1: mean priority, 2: hight priority, 3: very hight priority}")

  createdAt        DateTime  @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updatedAt        DateTime  @updatedAt @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}

model PerformanceToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique 

  updatedAt DateTime @updatedAt() @default(dbgenerated("(CURRENT_DATE)::timestamp")) 
  createdAt DateTime @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}

model Reports {
  id        Int       @id @default(autoincrement())
  status    String    @default("In Progress")
  uuid      String    @unique
  type      String    @default("SKU")

  userId    Int
  user      User      @relation(fields: [userId],references: [id])
  
  bundle    Bundle    @relation(fields: [bundleId], references: [id])
  bundleId  Int       @unique

  createAt  DateTime  @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt  DateTime  @updatedAt() @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}

model Bundle {
  id        Int       @id @default(autoincrement())
  type      String?   
  campaigns String[]  @unique
  status    String    @default("In progress")

  userId    Int      
  user      User      @relation(fields: [userId], references: [id])

  reports   Reports?  
  reportsId Int?      @unique

  createAt  DateTime  @default(dbgenerated("(CURRENT_DATE)::timestamp"))
  updateAt  DateTime  @updatedAt() @default(dbgenerated("(CURRENT_DATE)::timestamp"))
}

model CampaignItem {
  id          Int      @id @default(autoincrement())
  searchQuery String?   
  sku         String?   
  title       String?   
  price       String?   
  views       Int?
  clicks      Int?
  ctr         String?   
  toCart      Int?
  avgBid      String?   
  moneySpent  String?   
  orders      Int   ?   
  ordersMoney String?   
  models      Int?
  modelsMoney String?   
  drr         String?   
  createdAt   DateTime @default(now())   
  createdAtDB String  
  campaignId  String  
  userId      Int       
  user        User   @relation(fields: [userId], references: [id])
  type        String
}